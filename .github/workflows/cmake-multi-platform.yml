name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl

    steps:
    - uses: actions/checkout@v3

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Setup vcpkg (Windows)
      if: runner.os == 'Windows'
      run: |
        git clone https://github.com/microsoft/vcpkg.git C:\vcpkg
        cd C:\vcpkg
        .\bootstrap-vcpkg.bat
        .\vcpkg.exe integrate install

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    # List contents of Release directory
    - name: Debug - List contents of Release directory
      run: |
        dir "${{ steps.strings.outputs.build-output-dir }}/Release"

    # List contents of dummyApp.dir directory
    - name: Debug - List contents of dummyApp.dir directory
      run: |
        dir "${{ steps.strings.outputs.build-output-dir }}/dummyApp.dir"

    # Archive the build output for Windows
    - name: Archive production artifacts (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path "${{ github.workspace }}/build/my_app.exe", "${{ github.workspace }}/build/libs/*" -DestinationPath "my_app_Windows.zip"

    - name: Upload Windows artifacts
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v2
      with:
        name: my_app_windows
        path: ${{ github.workspace }}/my_app_windows.zip

